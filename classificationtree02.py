# -*- coding: utf-8 -*-
"""ClassificationTree02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YyfoVK0XUC7AYh7QKVkMlcoWNxxh1Fgf
"""

import pandas as pd
from sklearn.tree import DecisionTreeClassifier, export_graphviz
from sklearn.model_selection import train_test_split
from sklearn import metrics
from sklearn.datasets import load_iris

# Load the Iris dataset
iris = load_iris()

# Create a DataFrame for better readability
X = pd.DataFrame(iris.data, columns=iris.feature_names)
y = pd.Series(iris.target)

# Map the target values (0, 1, 2) to species names for clarity
y = y.map({0: 'setosa', 1: 'versicolor', 2: 'virginica'})

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

y_train

# Create a Decision Tree Classifier object with max depth
clf = DecisionTreeClassifier(max_depth=3, random_state=42)

# Train the model
clf.fit(X_train, y_train)

# Make a prediction on the test data
y_pred = clf.predict(X_test)

# Evaluate the model's accuracy
print("Accuracy:", metrics.accuracy_score(y_test, y_pred))

# Print a more detailed classification report
print("\nClassification Report:\n", metrics.classification_report(y_test, y_pred))

from sklearn.tree import plot_tree
import matplotlib.pyplot as plt

plt.figure(figsize=(15, 10))
plot_tree(clf, feature_names=iris.feature_names, class_names=clf.classes_, filled=True, rounded=True)
plt.show()