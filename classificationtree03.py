# -*- coding: utf-8 -*-
"""ClassificationTree03.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1snJ9WvkMxgxg4s7gQHiUU7IqXcmDKgvQ
"""

import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report
from sklearn.naive_bayes import MultinomialNB
from sklearn.feature_extraction.text import CountVectorizer # or TfidfVectorizer

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('combined_data.csv', encoding='latin-1') # Use the exact filename you uploaded
df['text'] == 'hxpn is gaining great momentum we are about to see firworks watch it'
df = df[~(df['text'] == 'hxpn is gaining great momentum we are about to see firworks watch it')]

rows_to_check = df[df['text'] == 'hxpn is gaining great momentum we are about to see firworks watch it']
rows_to_check.count()

x = df['text']
y = df['label']
rows_to_check = df[df['text'] == 'hxpn is gaining great momentum we are about to see firworks watch it']
rows_to_check.count()

y = y.map({0: 'Not Spam', 1: 'Spam'})

vectorizer = CountVectorizer(stop_words='english')
x_vectorized = vectorizer.fit_transform(x)

x_train, x_test, y_train, y_test = train_test_split(x_vectorized, y, test_size=0.2, random_state=42)

y_train

df['text'] = df['text'].str.strip()
#df.info()

df['text'].unique()

model = MultinomialNB()
model.fit(x_train, y_train)

y_pred = model.predict(x_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.4f}")

print(classification_report(y_test, y_pred, target_names=['Not Spam', 'Spam']))

new_message = "Hi, Can you check if you are willing to continue?"
message_vectorized = vectorizer.transform([new_message])

prediction = model.predict(message_vectorized)

if(prediction[0] == 'Not Spam') :
    print('Not Spam')
else:
    print('Spam')