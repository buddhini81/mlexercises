# -*- coding: utf-8 -*-
"""ClassificationTree03.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/buddhini81/mlexercises/blob/main/ClassificationTree03.ipynb
"""

import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report
from sklearn.naive_bayes import MultinomialNB
from sklearn.feature_extraction.text import CountVectorizer # or TfidfVectorizer

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('spam.csv')

x = df['Message']
y = df['Category']

vectorizer = CountVectorizer(stop_words='english')
x_vectorized = vectorizer.fit_transform(df['Message'])

x_train, x_test, y_train, y_test = train_test_split(x_vectorized, y, test_size=0.2, random_state=42)

y_train

model = MultinomialNB()
model.fit(x_train, y_train)

y_pred = model.predict(x_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.4f}")

print(classification_report(y_test, y_pred, target_names=['Not Spam', 'Spam']))

new_message = "Hi, Can you check if you are willing to continue?"
message_vectorized = vectorizer.transform([new_message])

prediction = model.predict(message_vectorized)

prediction[0]

if(prediction[0] == 'ham') :
    print('Not Spam')
else:
    print('Spam')